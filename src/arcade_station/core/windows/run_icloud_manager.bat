@echo off
REM Silent version of the iCloud manager batch file - runs completely in background

REM Get the directory where this batch file is located
set "SCRIPT_DIR=%~dp0"

REM Create a temporary PowerShell script to read config and launch the main script silently
set "TEMP_SCRIPT=%TEMP%\icloud_helper.ps1"

echo $configPath = Join-Path $pwd.Path 'config\screenshot_config.toml' > "%TEMP_SCRIPT%"
echo if (-not (Test-Path $configPath)) { exit 1 } >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo try { >> "%TEMP_SCRIPT%"
echo     $config = Get-Content $configPath -Raw >> "%TEMP_SCRIPT%"
echo     if ($config -match '\[icloud_upload\](.*?)(\[|$)') { >> "%TEMP_SCRIPT%"
echo         $section = $matches[1] >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo         # Extract parameters from config >> "%TEMP_SCRIPT%"
echo         $applePath = if ($section -match 'apple_services_path\s*=\s*"([^"]*)"') { $matches[1] } else { "C:\Program Files (x86)\Common Files\Apple\Internet Services\" } >> "%TEMP_SCRIPT%"
echo         $uploadDir = if ($section -match 'upload_directory\s*=\s*"([^"]*)"') { $matches[1] } else { "C:\Users\me\Pictures\Uploads" } >> "%TEMP_SCRIPT%"
echo         $interval = if ($section -match 'interval_seconds\s*=\s*(\d+)') { $matches[1] } else { 360 } >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo         # Get processes to restart >> "%TEMP_SCRIPT%"
echo         $processesArray = @() >> "%TEMP_SCRIPT%"
echo         if ($section -match 'processes_to_restart\s*=\s*\[(.*?)\]') { >> "%TEMP_SCRIPT%"
echo             $processesList = $matches[1] >> "%TEMP_SCRIPT%"
echo             $processesList -split ',' | ForEach-Object { >> "%TEMP_SCRIPT%"
echo                 if ($_ -match '"([^"]*)"') { >> "%TEMP_SCRIPT%"
echo                     $processesArray += $matches[1] >> "%TEMP_SCRIPT%"
echo                 } >> "%TEMP_SCRIPT%"
echo             } >> "%TEMP_SCRIPT%"
echo         } >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo         # Default to these processes if none specified >> "%TEMP_SCRIPT%"
echo         if ($processesArray.Count -eq 0) { >> "%TEMP_SCRIPT%"
echo             $processesArray = @("iCloudServices", "iCloudPhotos") >> "%TEMP_SCRIPT%"
echo         } >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo         # Get delete after upload setting >> "%TEMP_SCRIPT%"
echo         $deleteAfterUpload = if ($section -match 'delete_after_upload\s*=\s*(\w+)') { >> "%TEMP_SCRIPT%"
echo             $deleteValue = $matches[1].ToLower() >> "%TEMP_SCRIPT%"
echo             $deleteValue -eq "true" -or $deleteValue -eq "yes" -or $deleteValue -eq "1" >> "%TEMP_SCRIPT%"
echo         } else { $true } >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo         # Launch the main script with no window >> "%TEMP_SCRIPT%"
echo         $mainScript = Join-Path "%SCRIPT_DIR%" "manage_icloud_uploads.ps1" >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo         # Log file path >> "%TEMP_SCRIPT%"
echo         $logPath = Join-Path $env:TEMP "icloud_manager.log" >> "%TEMP_SCRIPT%"
echo. >> "%TEMP_SCRIPT%"
echo         # Start process with window style hidden >> "%TEMP_SCRIPT%"
echo         Start-Process powershell.exe -ArgumentList " >> "%TEMP_SCRIPT%"
echo             -ExecutionPolicy Bypass, >> "%TEMP_SCRIPT%"
echo             -WindowStyle Hidden, >> "%TEMP_SCRIPT%"
echo             -NoProfile, >> "%TEMP_SCRIPT%"
echo             -File `"$mainScript`", >> "%TEMP_SCRIPT%"
echo             -AppleServicesPath `"$applePath`", >> "%TEMP_SCRIPT%"
echo             -ProcessesToRestart $processesArray, >> "%TEMP_SCRIPT%"
echo             -UploadDirectory `"$uploadDir`", >> "%TEMP_SCRIPT%"
echo             -IntervalSeconds $interval, >> "%TEMP_SCRIPT%"
echo             -DeleteAfterUpload `$$deleteAfterUpload >> "%TEMP_SCRIPT%"
echo         " -WindowStyle Hidden >> "%TEMP_SCRIPT%"
echo     } >> "%TEMP_SCRIPT%"
echo } catch { >> "%TEMP_SCRIPT%"
echo     exit 1 >> "%TEMP_SCRIPT%"
echo } >> "%TEMP_SCRIPT%"

REM Run the helper script silently
powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden -NoProfile -File "%TEMP_SCRIPT%" > nul 2>&1 